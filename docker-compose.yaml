x-common-variables: &common-variables
  NO_OF_DIS_STA: 14
  NO_OF_PKG_MAC: 2
  UID: 1000
  RCUTILS_CONSOLE_OUTPUT_FORMAT: "[{severity}] {message}"
  CAN_CHANNEL: can0

services:
  ros2_base:
    build:
      context: .
      tags: 
        - "ros2_img:latest"
      target: ros2_img
    entrypoint: ["sh", "-c", "exit"]

  ros2_canopen:
    build:
      context: .
      tags: 
        - "ros2_canopen_img:latest"
      target: ros2_canopen_img
    depends_on:
      ros2_base:
        condition: service_completed_successfully
    entrypoint: ["sh", "-c", "exit"]

  build_pkg_mac_sys:
    image: pkg_mac_sys
    build:
      context: .
      target: pkg_mac_sys
      tags: 
        - "pkg_mac_sys:latest"
    depends_on:
      ros2_canopen:
        condition: service_completed_successfully

  build_prod_line_sys:
    image: prod_line_sys
    build:
      context: .
      target: prod_line_sys
      tags: 
        - "prod_line_sys:latest"
    depends_on:
      ros2_base:
        condition: service_completed_successfully

  pkg_mac_comm:
    image: pkg_mac_sys:latest
    container_name: pkg_mac_comm
    hostname: pkg_mac_comm
    depends_on:
      build_pkg_mac_sys:
        condition: service_completed_successfully
    privileged: true
    environment: *common-variables 
    command: ["sh", "-c", "ros2 launch packaging_machine_comm futian_lifecycle_setup.launch.py can_channel:=$${CAN_CHANNEL}"]
    volumes:
      - ./logs:/logs
    restart: no
    network_mode: host
    ipc: host
    pid: host

  activate_can:
    image: pkg_mac_sys:latest
    container_name: activate_can
    hostname: activate_can
    depends_on:
      - pkg_mac_comm
    environment:
      - UID=1000
    command: ["sh", "-c", "\
              sleep 1 && \
              ros2 lifecycle set /lifecycle_manager configure && \
              sleep 3 && \
              ros2 lifecycle set /lifecycle_manager activate"]
    network_mode: host
    ipc: host
    pid: host
  
  pkg_mac_manager:
    image: pkg_mac_sys:latest
    container_name: pkg_mac_manager
    hostname: pkg_mac_manager
    depends_on:
      activate_can:
        condition: service_completed_successfully
    environment: *common-variables 
    command: ["sh", "-c", "ros2 launch packaging_machine_control_system manager.launch.py no_of_pkg_mac:=$${NO_OF_PKG_MAC}"]
    volumes:
      - ./logs:/logs
    restart: no
    network_mode: host
    ipc: host
    pid: host

  pkg_mac:
    image: pkg_mac_sys:latest
    container_name: pkg_mac
    hostname: pkg_mac
    depends_on:
      activate_can:
        condition: service_completed_successfully
    privileged: true
    environment: *common-variables
    command: ["sh", "-c", "ros2 launch packaging_machine_control_system pkg_mac.launch.py no_of_pkg_mac:=$${NO_OF_PKG_MAC}"]
    volumes:
      - ./logs:/logs
      - /dev/bus:/dev/bus
      - /dev/serial:/dev/serial
    restart: no
    network_mode: host
    ipc: host
    pid: host

  # prod_line:
  #   image: prod_line_sys:latest
  #   container_name: prod_line
  #   hostname: prod_line
  #   depends_on:
  #     build_prod_line_sys:
  #       condition: service_completed_successfully
  #     activate_can:
  #       condition: service_completed_successfully
  #     dis_station:
  #       condition: service_started
  #   environment: *common-variables
  #   command: ["sh", "-c", "ros2 launch wcs prod_line.launch.py no_of_dis_station:=$${NO_OF_DIS_STA} no_of_pkg_mac:=$${NO_OF_PKG_MAC}"]
  #   volumes:
  #     - ./logs:/logs
  #   restart: no
  #   network_mode: host
  #   ipc: host
  #   pid: host
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --silent --fail 192.168.8.51:8000/api/v1/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  dis_station:
    image: prod_line_sys:latest
    container_name: dis_station
    hostname: dis_station
    depends_on:
      build_prod_line_sys:
        condition: service_completed_successfully
      activate_can:
        condition: service_completed_successfully
    environment: *common-variables
    command: ["sh", "-c", "ros2 launch wcs dis_station.launch.py no_of_dis_station:=$${NO_OF_DIS_STA}"]
    volumes:
      - ./logs:/logs
    restart: no
    network_mode: host
    ipc: host
    pid: host

  ros_bridge:
    build:
      context: .
      target: pkg_mac_sys
    container_name: pkg_mac_bridge
    hostname: pkg_mac_bridge
    depends_on:
      ros2_canopen:
        condition: service_completed_successfully
    command: ["sh", "-c", "ros2 launch rosbridge_server rosbridge_websocket_launch.xml"]
    volumes:
      - ./logs:/logs
    restart: no
    network_mode: host
    ipc: host
    pid: host